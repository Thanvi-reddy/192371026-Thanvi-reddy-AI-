from collections import deque

def bfs(graph, start):
    visited = set()         # Set to keep track of visited nodes
    queue = deque([start])  # Initialize a queue with the start node

    while queue:
        vertex = queue.popleft()  # Dequeue a vertex from queue
        if vertex not in visited:
            print(vertex, end=' ')
            visited.add(vertex)
            queue.extend(neighbor for neighbor in graph[vertex] if neighbor not in visited)

# Example usage
graph = {
    'A': ['B', 'C'],
    'B': ['D', 'E'],
    'C': ['F'],
    'D': [],
    'E': ['F'],
    'F': []
}

print("BFS traversal starting from vertex A:")
bfs(graph, 'A')
